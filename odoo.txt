SQL/Database.zip: MySQL [6months University]
Python/.ipynb: Odoo [SCSS, HTML/XML, JS] - [6months University, 6months Work]
PHP: 43% Laravel [Blade] 15% Code Igniter - [6months University]
Dart: Xamarin / Flutter [C++ 38% CMake 33%] - [1years University]
Java: Kotlin
http://localhost:8069/web?debug=1

Python.exe: pip install notebook
jupyter notebook
pandoc-3.1.9-windows-x86_64.msi pandoc --version
python.exe -m pip install --upgrade pip
pip install pandas numpy plotly matplotlib wordcloud

base_accounting_kit, 'report_xlsx' jidoka_respartner 
'depends': ['base', 'account', 'sale', 'account_check_printing', 'base_account_budget'],
app_odoo_customize, muk_web_theme
jidoka_awb
aa_payment_request: hr, jidoka_work_location, jidoka_account_voucher
account_move_name_sequence
jidoka_indonesia_taxs: l10n_id_efaktur
jidoka_purchase 
'depends': ['base','purchase','purchase_requisition','jidoka_inventory','report_xlsx','account', 'qa_qc', 'stock','purchase_stock','product','purchase_order_type'],
jidoka_inventory
'depends': ['stock','contacts','purchase','report_xlsx','delivery','product','uom','base'],
qa_qc: jidoka_rnd_flow: jidoka_export: purchase_request
'depends': ['stock','product', 'jidoka_inventory','jidoka_material','jidoka_sale'],
jidoka_material
'depends': ['mrp', 'stock', 'jidoka_sale' ,'product', 'jidoka_inventory', 'design_process'],
jidoka_sale
'depends': ['design_process','sale_stock','sale','account','product','jidoka_marketing','stock','sales_team'],
design_process
'depends': ['base','crm','product', 'stock', 'resource','sale','jidoka_marketing','sale_crm','mrp','report_xlsx','hr'],
jidoka_crm_sample_request
'depends': ['stock', 'base', 'crm', 'mrp', 'sale', 'jidoka_marketing', 'design_process'],

git config --global user.email "2010631170111@student.unsika.ac.id"
git config user.name "raditya2010631170111"
E:\jidoka\odoo14\ckwi-addons git clone <link> <directory> 
git clone <link> --branch php-CI4 --single-branch <directory> 
git clone <link> --branch php-CI4 --depth 1 .\ci3\
git/python --version
git branch <create_branch> (git branch), git checkout <enter_branch> 
git config --global user.name raditya2010631170111 | as205303
git config --global user.email 2010631170111@student.unsika.ac.id | key-ckwi
git branch -m = rename -d/-D = delete 
git push origin --delete <branch>
git diff .\jidoka_purchase\models\purchase_order.py = worktree
git blame .\jidoka_purchase\models\purchase_order.py (git blame)
git rm --cached ./ckwi-addons/design_process/manifest.py = unstage a file
git reset = unstage all
git checkout .\jidoka_purchase\report\m.xml = undo commit
git rm ./ = remove a file
git reset --hard = discard all
git status
git add . git commit -m "" git push origin dev-raditya
git add jidoka_export/
git --no-pager log -n <limit> (git lens's tabs commit)
q ctrl+c = exit
git reset --soft HEAD~ / ~2 = 2 push before
cd E:/jidoka/odoo14/server python .\odoo-bin
main>dev>clone>HTTP>main>dev/dev-raditya
merge/pull>dev-r/dev>compare>uncheck delete>create>ask/merge
git pull>upgrade - depends ['stock', 'base']

open folder & add . to workspace, File>Auto Save
$=python
ctrl+d=block
ctrl+c>v/ctrl+d=copy 1line
terminal=ctrl+`
ctrl+f > esc
ctrl+page=tabs
alt+tab=windows
win+v=clipboard
shift+home
shift+tab=reverse
cmd = instance
ask chatgpt state "odoo 14" > google - task backup > push - stop mid-action: git commit/upgrade/create new model = KeyError: 'sumber.acuan'

ctrl + k = comment
ctrl + u = lowercase
ctrl + shift + u = uppercase
click A-Z > resize column

Docs
Insert/Break = create Section 1,2,3 = different first page
Tanda Tangan
Docs > Drawing > di menu Insert > New > opsi Scribble > pakai mouse > Save and Close

CTRL+T CTRL+J = daftar pustaka
"Repeat Header Row" = table
Block table > Penomoran = auto numbering

Block > Convert Text to Table
Block > Alt+A+S = sort by abc

### + Enter
=== --- ___ *** ~~~
.pptx > View > tampilan kerangka = easy copas
Som AI = skripsi

pur1 (bijan): list (list, model), detail
UTS: splash screen, login - tugaspraktikum7 = shared_pref & sqlite - tugaspraktikum9 = sqlite & consume API
% flutter pub add provider
% flutter pub add http
quicktype.io
paste JSON > auto to use in model

case-sensitif - model_stock_picking = snake_case
fields.Float = camelCase
CONTRAINT_ = ALL_CAPS
#/""" """"

./ckwi-addons
./odoo14/server/odoo/addons
init=py,conf=restart & manifest=csv,xml=upgrade - .xml can change by .py=restart
update apps/favorite dashboard/install
addons: 1 directory before modul, 1 coma
'psql not found' pg_path
pgadmin user pwd odoo16pwd=conf db_user = odoo install user pwd, privileges=blue icon
master pwd (X admin)=.conf admin_passwd "access denied"
1) pgadmin port random 5432/3 8069/70 8072>properties create 
2) environment>edit>System variable>Path>New C:\jidoka\odoo16\phyton & \Scripts 
3) .\server python .\odoo-bin 
.\odoo_training_jidoka python .\odoo-bin scaffold jidokaacademy
python .\odoo-bin -u modulename (/data) -c .\odoo.conf -d databasename --stop-after-init
debug=odoo running on >edit>model, external - object=foreach/inheret, method=button
msu_rooster = search menu: technical/views model, click views, find "ir_holiday" = msu_holiday
clone staging2 > python -m pip install "PyJWT===1.7.1" simplejson pyfcm xlsxwriter --user/copy lib/site-packages> restore database
upgrade: 1st view > 2nd menuitem

✓ Demo=auto dummy=long load
-modular: fields & override, cons, method & override
-delegation: link record of models to parent
compute=based field, dependencies=computed based computed 
onchange=warning invalid value
make value without adding to database: constraints verified invariant by python/SQL
emp_id = error .py

constraint
@api.constrains('rounding') : Method yang memiliki decorator ini berfungsi untuk membuat constraints (pengecekan batasan/aturan) value sebuah field
if self.rounding <= 0:
    raise ValidationError

sql constrains - attribute class
_sql_constraints = [
	('name_description_check', 'CHECK(name != description)', 'The title of the course should not be the description'),
	('name_unique', 'UNIQUE(name)', 'Category name must be unique!'),
]

inventory/transfer & purchase/order = purchase/stock_picking.xml
method: button_validate ('grading_done', '=', True)

rnd_flow/wiz/design_detail state-s
samwill/wiz/_multi_line
design_process, crm_sample, marketing/wiz/approval & contract_review
inventory, manufacturing,  material/wiz/tag_card
_sale/sale.py
odoo/sale/sale.py
/mail/mail_activity.py state =

widget="priority"/"radio"/"selection"=X create edit/readonly='1'
.Float(digit=(12,6), track_visibility='onchange')
.Datetime/Dateorder
<width="33"> default
after, before, replace, inside menyisipkan, attribute: readonly/domain
invisible, required, column_invisible

status noupdate=True > False

		advanced view/default btn Filters
		<record id="jidokaacademy.course_view_search" model="ir.ui.view">
			<field name="name">jidokaacademy.course.view.search</field>
			<field name="model">jidokaacademy.course</field>
			<field name="arch" type="xml">
		inherit view = no <form> 
				<search string="Search Description">
					<field name="name"></field>
						<filter name="my_course" string="Active"
							domain="[('user_id', '=', uid)]"/>
						<group string="Group By">
							<filter name="group_by_user" string="Responsible"
								context="{'group_by': 'user_id'}"/>
						</group> </search></field></record>
						
		<field model>hr.contract</field>
			<field name="tax_id" widget="many2one/many2many_tags" options="{'no_create_edit':True}" optional="hide"/"show"/> 3 titik
			<field name="user_id" widget="many2one_avatar_user"/>
		.=@name='order_line'
		form//field=form/group/group
		tree/field
		_sale/sale.xml .line
		<xpath expr="//notebook/page[]/field[]/tree[1]/field[@name='name']" position="after">
		<field name="" attrs="{'column_invisible': [('parent.state','not in',['.'])]}"/>
		Open: Order Lines
		<xpath expr="//notebook/page[]/field[]/form/group/group[2]" position="replace">
		<field name="" attrs="{'invisible': [('state','not in',('.'))] }"/>
		unknown
		<xpath expr="//notebook/page[]/field[]/form/group/group/field[@name='product_id']">
		<xpath expr="//field[]/form//field[@name='product_id']">
		<xpath expr="//field[]/tree/field[@name='name']">
		<xpath expr="//field[]/tree">
		<xpath expr="//notebook/page[]/field/tree/field[@name='product_template_id']">
		
		<xpath expr="//field[@name='default_code']" position="after"> 
			<field name="code"/>
		<xpath expr="//field[@name='origin']" position="attributes">
			<attribute name="string">Source Document</attribute>
			<attribute name="attrs">{ 'readonly': [('state','in',('assigned','grading','done','cancel'))], 'invisible': [('is_tagcard','=', True)]} </attribute></xpath>
		OR <invisible="1"/> <force_save="1"/>
		OR <position="inside">
			<button type="object"  name="action_view_grading_summary" class="oe_stat_button"
				icon="fa-list" attrs="{'invisible':['|', ('grading_summary_count', '=', 0), ('state', 'not in', ('assigned','grading','done'))]}">
				<field name="grading_summary_count" widget="statinfo" string="Grading Summary"/>
				<field name='grading_summary_ids' invisible="1"/>
			</button></xpath>
============================================================================================================================================================================

	many_source_document_ids Many2one >
	= fields.Many2many(comodel_name='stock.picking', relation='packing_picking_rel', compute='_compute_many_source_document_ids')
	= delete all method containing it
	
    @api.depends('packing_id.no_sc_id.order_line')
    def _compute_mo_no(self):
        for record in self:                                                 #Access
            record.mo_no = record.packing_id.no_sc_id.order_line.no_mo
			
                            <field name="many_source_document_ids" domain > widget="many2many_tags"/>
							
	_name = 'operation.container.line'
	no_sc_ids = fields.Many2many('stock.picking', 'no_sc_ids_rel', 'container_line_id', 'picking_id', compute='_compute_no_sc_ids', store=True)
    many_no_sc_ids = fields.Many2many('stock.picking', 'many_no_sc_ids_rel', 'container_line_id', 'picking_id', store=True)
			
									<field name="no_sc_ids" widget="many2many_tags" invisible="1"/>
                                    <field name="many_no_sc_ids" widget="many2many_tags" domain="[('id', 'in', no_sc_ids)]"/>
			
	
	_name = 'packing.list'
	no_sc_id = fields.Many2one('sale.order', 'SC No.')	
	source_document_ids = fields.Many2many('stock.picking', compute='_compute_source_document_ids')								
	@api.depends('no_sc_id')
    def _compute_source_document_ids(self):
        for record in self:
            if record.delivery_address_id:
                record.source_document_ids = self.env['stock.picking'].search([
                    ('origin', '=', record.nosc_name),
                    ('state', '=', 'done'),
                    ('picking_type_code', '=', 'outgoing')])
            else:
                record.source_document_ids = False
				
	inspection:/data
===========================================================================================================================================================================	

column invisible = unless written on state-s

attachment document qa_qc/.xml
									<group name="ditolak"  attrs="{'invisible' : [('keputusan', '!=', 'tolak')]}" class="oe_row">
                                    <label for="attachment_doc" string="Attachment Document" />
                                    <div class="d-flex ">
                                       <field name="attachment_doc"  widget="pdf_viewer" style="margin-right:20px;"/> <field name="attachment_doc"  widget="pdf_viewer"/></div></group>
                                     <group name="ditolak"  attrs="{'invisible' : [('keputusan', '!=', 'tolak')]}" class="oe_row">
                                       <label for="attachment_doc" string="Attachment Document" />
                                    <div class="d-flex ">
                                       <field name="attachment_doc"  widget="pdf_viewer" style="margin-right:20px;"/> <field name="attachment_doc"  widget="pdf_viewer"/></div></group>

user issue = make user based ciptackwi's rnd@gmail.com
Record does not exist or has been deleted. (Record: res.partner(19,), User: 19) = partner_id = fields.Many2one("res.partner","Customer")
	_name = 'design.process'
	def action_confirm(self):
        return {
                'name' : _("Confirm With Comment"),'view_type' : 'form',
                'res_model' : 'approval.history.rnd.wizard',
                'view_mode' : 'form','type':'ir.actions.act_window','target': 'new',
            }

	_name = "approval.history.rnd.wizard"
    def action_confirm(self):
	lead.message_post(author_id=user.id,body=(message),message_type='notification',subtype_xmlid="mail.mt_comment",notification_ids=notification_ids,
                           partner_ids=[user.partner_id.id] if user.partner_id else []
                       )									

_export's invoice data on packing_list
1. send to _export's invoice > 2. send to _accounting's invoice
export's invoice=penampung - cause some fields/data isn't exist on _accounting's invoice = error

Rest API: JPayroll >< Odoo >< Mobile ESS: E Self Service

report packing_list, invoice: MO number > 
smart button
= d detail/design group: 4x <kanban><form> = kanban view click > view form
report rnd/sample

	<record model="ir.actions.act_window" id="action_design_process_design">
      <field name="name">Spec Design</field>
      <field name="res_model">design.process</field>
      <field name="view_mode">kanban,tree,form</field>
      <field name="domain">[('type_rnd', '=', 'is_design')]</field>
    </record>

    <record model="ir.actions.act_window" id="action_design_process_sample">
      <field name="name">Sample Request</field>
      <field name="res_model">design.process</field>
      <field name="view_mode">kanban,tree,form</field>
      <field name="domain">[('type_rnd', '=', 'is_sample')]</field>
    </record>
	
menu A action A <menuitem id="" parent = 'design_process_sub_menu' name="Spec. Design" action="design_process.action_design_process_design"/>
menu B action B <menuitem id="" parent = 'design_process_sub_menu' name="Sample Request" action="design_process.action_design_process_sample"/>

tree-form AB: invisible: type_a = false
risky: inherit, deleting code
mandatory <xpath expr="//field[@name='']" position="attributes"><attribute name="required">1</attribute></xpath>
		<field name="" required="1"/>
.py oe_chatter = recreate can't refresh tabs
override=draft already but need included
<xpath expr="//field[@name='location_dest_id']" position="attributes">
    <attribute name="attrs">{'readonly': [('state', 'not in', ['draft', 'waiting', 'confirmed', 'grading', 'assigned', 'done', 'cancel'])]}</attribute></xpath>
avoid singleton: if else: self.order_line[0].no_mo
auto string if no set: no_pi = No Pi
push: change of jidoka_sale/sale.order.line/name

account.move payment_id failed: 
	account_payment_id = fields.Many2one('account.payment', compute='_compute_payment')
    def _compute_payment(self):
        for move in self:
            account_payment = self.env['account.payment'].search([('ref', '=', move.name)])
            move.account_payment_id = account_payment.id
			
                    <field name="account_payment_id" invisible="1"/>
 
_inherit = model.name - creating new field=error: uninstall module > reinstall it
res.partner: jidoka_respartner
res.company: aa_payment_request/res_config
acccount.move: fik_invoice_excel
 
Saepul: proses pembayaran voucher out
1 dokumen voucher out bisa memilih beberapa no. bill dan PO

    def action_manufactur_order_tes(self):
        self.ensure_one()
        if not self.order_line:
            raise ValidationError("Please add a product")

packing.list def action_done = send it's value to invoice
error: create value/archive it = invoice has mandatory

Reyhan: qa_qc/level.aql/categ_id = Many2one product = depends ['product']
'depends': ['base','crm','product', 'stock', 'resource','sale','jidoka_marketing','sale_crm','mrp','report_xlsx','hr'],
design_process - crm_sample_request - jidoka_marketing

===================================									
<field name="state" decoration-success="state == 'confirm'" decoration-info="state == 'draft'" decoration-danger="state == 'repeat'" widget="badge" optional="show"/>
state uninclude=white, success=green, info=blue, warning=yellow, danger=red

display only draft,confirm - repeat=invisible, visible if state in repeat=
                        <field name="state" widget="statusbar" statusbar_visible="draft,confirm" />

===================================
				if two condition = OR
				<xpath expr="//button[@name='button_validate'][1]" position="before">
					<button name="button_validate_without_backorder" type="object" class="oe_highlight" string="Validate" attrs="{ 'invisible': ['|','|',('is_kayu','=',False),('grading_done','=',False),('show_validate','=',False)] }"/>
					<button name="button_grading" type="object" class="oe_highlight" string="Grading" attrs="{ 'invisible': [('state','not in',['ready','confirmed']),('picking_type_code', '!=', 'outgoing')] }"/>
					<field name='grading_done' invisible="1"/>
				</xpath>
				
				!= not in 
				= in
				
				if two condition use ['|', = AND
				
				<xpath expr="//button[@name='button_validate'][1]" position="before">
					<button name="button_validate_without_backorder" type="object" class="oe_highlight" string="Validate" attrs="{ 'invisible': ['|','|',('is_kayu','=',False),('grading_done','=',False),('show_validate','=',False)] }"/>
					<button name="button_grading" type="object" class="oe_highlight" string="Grading" attrs="{ 'invisible': ['|', ('picking_type_code', '!=', 'incoming'),('state','not in',['ready','confirmed'])] }"/>
					<field name='grading_done' invisible="1"/>
				</xpath>
				
Origina
					<button name="button_validate" attrs="{'invisible': ['|', ('state', 'in', ('waiting','confirmed')), ('show_validate', '=', False)]}" string="Validate" type="object" class="oe_highlight" groups="stock.group_stock_user"/> -  blue
                    <button name="button_validate" attrs="{'invisible': ['|', ('state', 'not in', ('waiting', 'confirmed')), ('show_validate', '=', False)]}" string="Validate" type="object" groups="stock.group_stock_user" class="o_btn_validate"/> - white
						
grading validate-blue validate-white
grading if in deiivery "ckwi/out"=invisibe vs "ckwi/in" di receipt
Overide Purchase/stock.picking "Vaidate"
Sales/CR>Sale MO sale.order delivery
				<xpath expr="//header/button[@name='button_validate'][1]" position="attributes">
					<!-- <attribute name="string"> Validate Bukan Kayu</attribute> -->
					<attribute name="attrs">{'invisible': ['|',('is_kayu','=', True),('show_validate','=', False)]}</attribute>
				</xpath>
					
Purchase/receipt
				<xpath expr="//button[@name='button_validate'][1]" position="before">
					<button name="button_validate_without_backorder" type="object" class="oe_highlight" string="Validate" attrs="{ 'invisible': ['|','|',('is_kayu','=',False),('grading_done','=',False),('show_validate','=',False),('is_delivery','=', True)] }"/>
===================================
		
	
kanban_image = odoo/js/if .Binary=thumbnail else if .Many2many=placeholder
qa_qc/tes.kntruksi & tes.kntruksi.line
design_prcess/spec.design & _marketing/attachment.py design.image


    tes_belasan = fields.One2many('img.att', 'parent_field_name') #inverse
								
									<field name="spec_design_ids"> #use model's fields
										<tree/form>
									</field>