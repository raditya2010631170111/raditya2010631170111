SQL/Database.zip: MySQL [6months University]
Python/.ipynb: Odoo [SCSS, HTML/XML, JS] - [6months University, 6months Work]
PHP: 43% Laravel [Blade] 15% Code Igniter - [6months University]
Dart: Xamarin / Flutter [C++ 38% CMake 33%] - [1years University]
Java: Kotlin
composer/docker, Laragon/service PostgreSQL, extension: odoo snippet, muk_web_theme, ibo icon builder for odoo

E:\jidoka\odoo14\ckwi-addons git clone <link> <directory> 
git/python --version
git branch <create_branch> (git branch), git checkout <enter_branch> 
git config --global user.name raditya2010631170111 | as205303
git config --global user.email 2010631170111@student.unsika.ac.id | key-ckwi
git branch -m = rename -d/-D = delete 
git push origin --delete <branch>
git diff .\jidoka_purchase\models\purchase_order.py = worktree
git blame .\jidoka_purchase\models\purchase_order.py (git blame)
git rm --cached ./ckwi-addons/design_process/manifest.py = unstage a file
git reset = unstage all
git checkout .\jidoka_purchase\report\m.xml = undo commit
git rm ./ = remove a file
git reset --hard = discard all
git status
git add . git commit -m "" git push origin dev-raditya
git --no-pager log -n <limit> (git lens's tabs commit)
q ctrl+c = exit
git reset --soft HEAD~ / ~2 = 2 push before
cd E:/jidoka/odoo14/server python .\odoo-bin

open folder & add . to workspace, File>Auto Save
$=python
ctrl+d=block
ctrl+c>v/ctrl+d=copy 1line
terminal=ctrl+`
ctrl+f > esc
ctrl+page=tabs
alt+tab=windows
win+v=clipboard
shift+home
shift+tab=reverse
cmd = instance
ask chatgpt state "odoo 14" > google - task backup > push - stop mid-action: git commit/upgrade

sofware kerangka kerja=membuat dalam pengembangan situs web, mudah dan cepat, tersedia fungsi-fungsi siap pakai untuk mengelola akses ke pangkalan data, pengelolaan templat, dan pengelolaan sesi. Walaupun ditargetkan untuk pengembangan laman web dinamis , ini juga bisa diaplikasikan ke laman web statis . kelebihan FW 1. website lebih scalable/mudah dikembangkan 2. terdapat namespace dan tampilan untuk mengorganisir dan mengatur sumber daya website 3. proses pengembangan lebih cepat=hemat waktu karena Laravel dikombinasikan dgn komponen FW lain untuk mengembangkan website Struktur FW - MVC (Model Views Controller) User updates> Controller manipulates> Model updates> View <sees User Artisan/Virtual Host = disimpan dimana2 vs Laravel > buka folder > = hanya di dir webserver app = program yg kita buat>http 	> Controllers	> Middleware > Authenticate	> Models bootstrap > cache config = konfigurasi program kita buat database > migrations > dbms > seeder = generate data ke tabel2 public = folder menampilkan yg diliat user resource = UI yg diliat user routes = pintu gerbang seluruh recourse > web.php = membuat link laravel vendor = library dlm program dibuat artisan = file inputan menjalankan artisan composer.json = tmpt mendefinisikan library composer yg dipakai
composer self-update
composer global update --ignore-platform-reqs
composer update --ignore-platform-reqs
composer install --ignore-platform-reqs
php artisan help make:seed
composer > C:\laragon\bin\php\php.exe
Laragon>kanan>PHP>version>7.4>php.ini>memory limit = 25 MB > -1 //unlimited //php -r "echo ini_get('memory_limit').PHP_EOL;"
cd C:\laragon\www\kuliah_web_fw > composer create-project --prefer-dist laravel/laravel
cd C:\laragon\www\kuliah_web_fw\laravel > composer install 
php artisan serv
open folder kuliah_web_fw> cd .\laravel\ > php artisan key:generate
P5 Routes/web.php
P6 app/http/Controllers php artisan make:controller Barang --resource
web.php> use app\Http\Controllers\Barang;
P7 resource > views > utama.blade.php, barang.blade.php
P9 Migration 127.0.0.1/phpmyadmin/ //menyimpan log update hapus, history
laragon>tools>quick add>phymyadmin
.env //konfig //koneksi ke database DB_DATABASE=kuliah_web_fw
php artisan make:migration //perubahan struktur database/TD=create file untuk merubah
php artisan migrate:rollback --step=2 //eksekusi up() > create yes //eksekusi down()
php artisan migrate:status
P10 app/Models/product.php php artisan make:model Products
P11 Barang.php> use App\Models\Products;
composer require laravelcollective/html "~6.0"
composer require laracasts/flash
P12 Postman mengubah model menjadi JSON
routes>api.php
P13 config/app.php
composer require maatwebsite/excel --with-all-dependencies
php artisan vendor:publish --provider="Maatwebsite\Excel\ExcelServiceProvider"
app/Exports - php artisan make:export PlaystationsExport --model=Playstations
app/Imports - php artisan make:import PlaystationsImport --model=Playstations
$data = object
Products = model

pur1 (bijan): list (list, model), detail
UTS: splash screen, login
tugaspraktikum7 = shared_pref & sqlite
tugaspraktikum9 = sqlite & consume API
% flutter pub add provider
% flutter pub add http
quicktype.io
paste JSON > auto to use in model
apabila error API
php artisan optimize
php artisan view:clear
pakai public API = nambah poin

case-sensitif - model_stock_picking = snake_case
fields.Float = camelCase
CONTRAINT_ = ALL_CAPS
#/""" """"